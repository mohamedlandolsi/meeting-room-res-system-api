{{- if .Values.kafka.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: zookeeper
  replicas: {{ .Values.kafka.zookeeper.replicaCount }}
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: wurstmeister/zookeeper
        ports:
        - containerPort: 2181
        {{- if eq .Values.global.environment "production" }}
        resources:
          limits:
            cpu: 300m
            memory: 512Mi
          requests:
            cpu: 150m
            memory: 256Mi
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: zookeeper
  ports:
  - port: 2181
    targetPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: kafka
  replicas: {{ .Values.kafka.replicaCount }}
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        - containerPort: 9093
        env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://kafka:9093,OUTSIDE://kafka:9092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_LISTENERS
          value: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        {{- if eq .Values.global.environment "production" }}
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 512Mi
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: kafka
  ports:
  - name: kafka-internal
    port: 9093
    targetPort: 9093
  - name: kafka-external
    port: 9092
    targetPort: 9092
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topic-init
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      containers:
      - name: kafka-topic-init
        image: wurstmeister/kafka
        command:
        - /bin/bash
        - -c
        - |
          set -e
          # Wait for Kafka to be ready
          echo "Waiting for Kafka to be ready..."
          sleep 30
          
          # Create required topics
          /opt/kafka/bin/kafka-topics.sh --create --topic room_events --if-not-exists --bootstrap-server kafka:9093 --partitions 1 --replication-factor 1
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
      restartPolicy: OnFailure
{{- end }}