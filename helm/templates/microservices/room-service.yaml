apiVersion: apps/v1
kind: Deployment
metadata:
  name: room-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: room-service
spec:
  replicas: {{ .Values.services.room.replicaCount }}
  selector:
    matchLabels:
      app: room-service
  template:
    metadata:
      labels:
        app: room-service
    spec:
      containers:
      - name: room-service
        image: {{ .Values.imageRegistry }}/{{ .Values.imageRepository }}/room-service:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.services.room.port }}
        env:
        - name: DATABASE_URL
          value: postgresql://{{ .Values.postgres.user }}:{{ .Values.postgres.password }}@postgres:5432/room_db
        - name: JWT_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: JWT_SECRET_KEY
        - name: KAFKA_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: KAFKA_BROKER_URL
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DEBUG
        - name: PORT
          value: "{{ .Values.services.room.port }}"
        readinessProbe:
          httpGet:
            path: /rooms/
            port: {{ .Values.services.room.port }}
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /rooms/
            port: {{ .Values.services.room.port }}
          initialDelaySeconds: 30
          periodSeconds: 20
        resources:
{{ toYaml .Values.services.room.resources | indent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: room-service
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: room-service
  ports:
  - port: {{ .Values.services.room.port }}
    targetPort: {{ .Values.services.room.port }}